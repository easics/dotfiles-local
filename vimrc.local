" Get the defaults that most users want.
source $VIMRUNTIME/defaults.vim

"Visuals
set background=dark
colorscheme desert
highlight Folded cterm=bold ctermfg=2
highlight ColorColumn ctermbg=10 "Highlight margin in a non-intrusive color
highlight QuickFixLine ctermbg=black
highlight SpellBad ctermfg=red ctermbg=black cterm=underline
highlight SpellCap ctermfg=black
set colorcolumn= "Don't highlight margin
set hlsearch
filetype on "for syntax highlighting based on filetype

"Behaviour
set ignorecase
set smartcase
set number
set wildmode=list:longest:full,full
set virtualedit=all
set autoread " Autoload file changes. You can undo by pressing u.
set textwidth=0 " Do not insert newline automatically after a certain number of characters.

"Indentation
set expandtab "convert tabs to spaces
set tabstop=4 "4 spaces for a tab
set shiftwidth=2 "indent 2 spaces

"Show tabs and trailing spaces
set list
set listchars=tab:>»,trail:·

filetype indent on
set autoindent
"set smartindent "requires autoindent

"Mappings
nnoremap <F5> :lcd %:p:h <CR>
nnoremap <C-l> :nohlsearch <CR> <C-l>
nnoremap <F8> :TagbarToggle<CR>
"" Fold all matches of a currently searched pattern
"" Undo with zR
nnoremap \z :setlocal foldexpr=(getline(v:lnum)=~@/)?0:(getline(v:lnum-1)=~@/)\\|\\|(getline(v:lnum+1)=~@/)?1:2 foldmethod=expr foldlevel=0 foldcolumn=2<CR>

"Prepend path to directory of current file
"after entering ':e .', ':vs .', ':sp .' or ':tabnew .'
cnoremap <expr> . ExpandCurrentDir()

function! ExpandCurrentDir()
  if ((getcmdtype() is# ':') && ((getcmdline() is# 'e ') || (getcmdline() is# 'vs ') || (getcmdline() is# 'sp '|| (getcmdline() is# 'tabnew '))))
    return expand('%:p:h') . '/'
  endif
  return '.'
endfunction

"Language servers
"" For debugging
let lsp_log_verbose = 1
let lsp_log_file = expand('~/vim-lsp.log')

"" Register the language servers
let verible_verilog_ls_path = expand(
      \'~/.local/share/vim-lsp-settings/servers/
      \verible-verilog-ls/verible-verilog-ls')

if executable(verible_verilog_ls_path)
    au User lsp_setup call lsp#register_server({
        \ 'name': 'verible-verilog-ls',
        \ 'cmd': {server_info->[
            \ g:verible_verilog_ls_path,
            \ '--rules_config',
            \ '/home/jasper/.rules.verible_lint'
            \ ]},
        \ 'allowlist': ['verilog', 'systemverilog'],
        \ })
endif

function! s:on_lsp_buffer_enabled() abort
    setlocal omnifunc=lsp#complete
    setlocal signcolumn=yes
    if exists('+tagfunc') | setlocal tagfunc=lsp#tagfunc | endif
    nnoremap <buffer> <C-]> :LspDefinition<CR>
    nnoremap <buffer> [d :LspPreviousDiagnostic<CR>
    nnoremap <buffer> ]d :LspNextDiagnostic<CR>
    nnoremap <buffer> <space>a :LspCodeAction<CR>
    "Using <plug> does not work for some reason
    nnoremap <buffer> <space>f :LspDocumentFormat<CR>
    nnoremap <buffer> <space>r :LspReferences<CR>
    nnoremap <buffer> <space>d :LspDocumentDiagnostics<CR>

    let g:lsp_format_sync_timeout = 1000
    autocmd! BufWritePre *.rs,*.go call execute('LspDocumentFormatSync')

    " refer to doc to add more commands
endfunction

augroup lsp_install
    au!
    " call s:on_lsp_buffer_enabled only for languages that has the server registered.
    autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
augroup END
